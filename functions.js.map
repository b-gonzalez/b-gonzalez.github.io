{"version":3,"file":"functions.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/./src/functions/functions.ts","webpack://excel-custom-functions/webpack/runtime/define property getters","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/**\r\n * Search for products that match a given substring. Try =CONTOSO.MOVIESEARCH(\"https://www.justwatch.com/us/movie/the-matrix\", false).\r\n * @customfunction\r\n * @param {string} query The string to search for in the sample JSON data.\r\n * @param {boolean} [completeMatch] Define whether the search should be a match of the whole product name or part of the product name. If omitted, completeMatch = false.\r\n * @return {Promise<any[][]>} Search results as one or more data type entity values.\r\n */\r\n\r\nexport async function movieSearch(query: string, completeMatch?: boolean): Promise<any[][]> {\r\n  // This function searches a set of sample JSON data for the string entered in the\r\n  // custom function, and then returns the search result as one or more entity values.\r\n\r\n  // Set up an error to use if a matching product doesn't exist in the JSON data.\r\n  const notAvailableError = {\r\n    type: \"Error\",\r\n    errorType: \"NotAvailable\"\r\n  };\r\n\r\n  // Search the sample JSON data for matching product names.\r\n  try {\r\n    if (completeMatch === null) {\r\n      completeMatch = false;\r\n    }\r\n\r\n    console.log(`Searching for ${query}...`);\r\n    // const searchResult = await searchMovie(query, completeMatch);\r\n    const searchResult = await getDataFromUrl(query);\r\n\r\n    // If the search result is empty, return the error.\r\n    if (searchResult.length == 0) {\r\n      return [[notAvailableError]];\r\n    }\r\n\r\n    // Create product entities for each of the products returned in the search result.\r\n    const entities = searchResult.map((movie) => [makeMovieEntity(movie)]);\r\n    return entities;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n/**\r\n * Search for products that match a given substring. Try =CONTOSO.MOVIESEARCH2(\"https://www.justwatch.com/us/movie/tar-2022\").\r\n * @customfunction\r\n * @param {string} query The string to search for in the sample JSON data.\r\n * @param {boolean} [completeMatch] Define whether the search should be a match of the whole product name or part of the product name. If omitted, completeMatch = false.\r\n * @return {Promise<any[][]>} Search results as one or more data type entity values.\r\n */\r\n\r\nexport async function movieSearch2(query: string, completeMatch?: boolean): Promise<any[][]> {\r\n  // This function searches a set of sample JSON data for the string entered in the\r\n  // custom function, and then returns the search result as one or more entity values.\r\n\r\n  // Set up an error to use if a matching product doesn't exist in the JSON data.\r\n  const notAvailableError = {\r\n    type: \"Error\",\r\n    errorType: \"NotAvailable\"\r\n  };\r\n\r\n  // Search the sample JSON data for matching product names.\r\n  try {\r\n    if (completeMatch === null) {\r\n      completeMatch = false;\r\n    }\r\n\r\n    console.log(`Searching for ${query}...`);\r\n    // const searchResult = await searchMovie(query, completeMatch);\r\n    const searchResult = await getDataFromUrl(query);\r\n\r\n    // If the search result is empty, return the error.\r\n    if (searchResult.length == 0) {\r\n      return [[notAvailableError]];\r\n    }\r\n\r\n    // Create product entities for each of the products returned in the search result.\r\n    const entities = searchResult.map((movie) => [makeMovieEntity2(movie)]);\r\n    return entities;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nfunction makeMovieEntity(movie?: any) {\r\n  const jw_img_url = \"https://images.justwatch.com\"\r\n\r\n  const entity: Excel.EntityCellValue = {\r\n    type: \"Entity\",\r\n    text: movie.title,\r\n    properties: {\r\n      \"Movie Name\": {\r\n        type: \"String\",\r\n        basicValue: movie.title || \"\"\r\n      },\r\n      \"Release Year\": {\r\n        type: \"Double\",\r\n        basicValue: movie.originalReleaseYear || 0,\r\n      },\r\n      \"Release Date\": {\r\n        type: \"String\",\r\n        basicValue: movie.originalReleaseDate || \"\",\r\n      },\r\n      \"Runtime\": {\r\n        type: \"Double\",\r\n        basicValue: movie.runtime || 0,\r\n      },\r\n      \"Short Description\": {\r\n        type: \"String\",\r\n        basicValue: movie.shortDescription || \"\",\r\n      },\r\n      \"itunes_currency\": {\r\n        type: \"String\",\r\n        basicValue: movie.itunes_currency || \"\",\r\n      },\r\n      \"itunes_monetizationType\": {\r\n        type: \"String\",\r\n        basicValue: movie.itunes_monetizationType || \"\",\r\n      },\r\n      \"itunes_presentationType\": {\r\n        type: \"String\",\r\n        basicValue: movie.itunes_presentationType || \"\",\r\n      },\r\n      \"itunes_retailPrice\": {\r\n        type: \"String\",\r\n        basicValue: movie.itunes_retailPrice || \"\",\r\n      },\r\n      \"itunes_retailPriceValue\": {\r\n        type: \"Double\",\r\n        basicValue: movie.itunes_retailPriceValue || 0,\r\n      },\r\n      \"amazon_currency\": {\r\n        type: \"String\",\r\n        basicValue: movie.amazon_currency || \"\",\r\n      },\r\n      \"amazon_monetizationType\": {\r\n        type: \"String\",\r\n        basicValue: movie.amazon_monetizationType || \"\",\r\n      },\r\n      \"amazon_presentationType\": {\r\n        type: \"String\",\r\n        basicValue: movie.amazon_presentationType || \"\",\r\n      },\r\n      \"amazon_retailPrice\": {\r\n        type: \"String\",\r\n        basicValue: movie.amazon_retailPrice || \"\",\r\n      },\r\n      \"amazon_retailPriceValue\": {\r\n        type: \"Double\",\r\n        basicValue: movie.amazon_retailPriceValue || 0,\r\n      },\r\n      \"vudu_currency\": {\r\n        type: \"String\",\r\n        basicValue: movie.vudu_currency || \"\",\r\n      },\r\n      \"vudu_monetizationType\": {\r\n        type: \"String\",\r\n        basicValue: movie.vudu_monetizationType || \"\",\r\n      },\r\n      \"vudu_presentationType\": {\r\n        type: \"String\",\r\n        basicValue: movie.vudu_presentationType || \"\",\r\n      },\r\n      \"vudu_retailPrice\": {\r\n        type: \"String\",\r\n        basicValue: movie.vudu_retailPrice || \"\",\r\n      },\r\n      \"vudu_retailPriceValue\": {\r\n        type: \"Double\",\r\n        basicValue: movie.vudu_retailPriceValue || 0,\r\n      },\r\n      \"amctheatresondemand_currency\": {\r\n        type: \"String\",\r\n        basicValue: movie.amctheatresondemand_currency || \"\",\r\n      },\r\n      \"amctheatresondemand_monetizationType\": {\r\n        type: \"String\",\r\n        basicValue: movie.amctheatresondemand_monetizationType || \"\",\r\n      },\r\n      \"amctheatresondemand_presentationType\": {\r\n        type: \"String\",\r\n        basicValue: movie.amctheatresondemand_presentationType || \"\",\r\n      },\r\n      \"amctheatresondemand_retailPrice\": {\r\n        type: \"String\",\r\n        basicValue: movie.amctheatresondemand_retailPrice || \"\",\r\n      },\r\n      \"amctheatresondemand_retailPriceValue\": {\r\n        type: \"Double\",\r\n        basicValue: movie.amctheatresondemand_retailPriceValue || 0,\r\n      },\r\n      \"microsoft_currency\": {\r\n        type: \"String\",\r\n        basicValue: movie.microsoft_currency || \"\",\r\n      },\r\n      \"microsoft_monetizationType\": {\r\n        type: \"String\",\r\n        basicValue: movie.microsoft_monetizationType || \"\",\r\n      },\r\n      \"microsoft_presentationType\": {\r\n        type: \"String\",\r\n        basicValue: movie.microsoft_presentationType || \"\",\r\n      },\r\n      \"microsoft_retailPrice\": {\r\n        type: \"String\",\r\n        basicValue: movie.microsoft_retailPrice || \"\",\r\n      },\r\n      \"microsoft_retailPriceValue\": {\r\n        type: \"Double\",\r\n        basicValue: movie.microsoft_retailPriceValue || 0,\r\n      },\r\n    },\r\n    layouts: {\r\n      compact: {\r\n        icon: Excel.EntityCompactLayoutIcons.moviesAndTv\r\n      },\r\n      card: {\r\n        title: { property: \"Movie Name\" },\r\n        sections: [\r\n          {\r\n            layout: \"List\",\r\n            title: \"iTunes\",\r\n            collapsed: true,\r\n            properties: [\"itunes_currency\", \"itunes_monetizationType\", \"itunes_presentationType\", \"itunes_retailPrice\",\"itunes_retailPriceValue\"]\r\n          },\r\n          {\r\n            layout: \"List\",\r\n            title: \"Amazon\",\r\n            collapsed: true,\r\n            properties: [\"amazon_currency\", \"amazon_monetizationType\", \"amazon_presentationType\", \"amazon_retailPrice\",\"amazon_retailPriceValue\"]\r\n          },\r\n          {\r\n            layout: \"List\",\r\n            title: \"Vudu\",\r\n            collapsed: true,\r\n            properties: [\"vudu_currency\", \"vudu_monetizationType\", \"vudu_presentationType\", \"vudu_retailPrice\",\"vudu_retailPriceValue\"]\r\n          },\r\n          {\r\n            layout: \"List\",\r\n            title: \"AMC Theatres On Demand\",\r\n            collapsed: true,\r\n            properties: [\"amctheatresondemand_currency\", \"amctheatresondemand_monetizationType\", \"amctheatresondemand_presentationType\", \"amctheatresondemand_retailPrice\",\"amctheatresondemand_retailPriceValue\"]\r\n          },\r\n          {\r\n            layout: \"List\",\r\n            title: \"Microsoft\",\r\n            collapsed: true,\r\n            properties: [\"microsoft_currency\", \"microsoft_monetizationType\", \"microsoft_presentationType\", \"microsoft_retailPrice\",\"microsoft_retailPriceValue\"]\r\n          },\r\n        ]\r\n      }\r\n    },\r\n    provider: {\r\n      description: \"JustWatch - The Streaming Guide\", // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\r\n      logoSourceAddress: \"https://m.media-amazon.com/images/I/51R8OjhFkBL.png\", // Source URL of the logo to display.\r\n      logoTargetAddress: `https://www.justwatch.com/${movie.fullPath}` // Destination URL that the logo navigates to when selected.\r\n    }\r\n  };\r\n\r\n  // Add image property to the entity and then add it to the card layout.\r\n  if (movie.posterUrl !== \"\") {\r\n    entity.properties[\"Image\"] = {\r\n      type: \"WebImage\",\r\n      address: `${jw_img_url}${movie.posterUrl}` || \"\"\r\n    };\r\n    entity.layouts.card.mainImage = { property: \"Image\" };\r\n  }\r\n\r\n  return entity;\r\n}\r\n\r\nfunction makeMovieEntity2(movie?: any) {\r\n  const jw_img_url = \"https://images.justwatch.com\"\r\n\r\n  const entity: Excel.EntityCellValue = {\r\n    type: \"Entity\",\r\n    text: movie.title,\r\n    properties: {\r\n      \"Movie Name\": {\r\n        type: \"String\",\r\n        basicValue: movie.title || \"\"\r\n      },\r\n      \"Release Year\": {\r\n        type: \"Double\",\r\n        basicValue: movie.originalReleaseYear || 0,\r\n      },\r\n      \"Release Date\": {\r\n        type: \"String\",\r\n        basicValue: movie.originalReleaseDate || \"\",\r\n      },\r\n      \"Runtime\": {\r\n        type: \"Double\",\r\n        basicValue: movie.runtime || 0,\r\n      },\r\n      \"Short Description\": {\r\n        type: \"String\",\r\n        basicValue: movie.shortDescription || \"\",\r\n      },\r\n    },\r\n    layouts: {\r\n      compact: {\r\n        icon: Excel.EntityCompactLayoutIcons.moviesAndTv\r\n      },\r\n      card: {\r\n        title: { property: \"Movie Name\" },\r\n        sections: []\r\n      }\r\n    },\r\n    provider: {\r\n      description: \"JustWatch - The Streaming Guide\", // Name of the data provider. Displays as a tooltip when hovering over the logo. Also displays as a fallback if the source address for the image is broken.\r\n      logoSourceAddress: \"https://m.media-amazon.com/images/I/51R8OjhFkBL.png\", // Source URL of the logo to display.\r\n      logoTargetAddress: `https://www.justwatch.com/${movie.fullPath}` // Destination URL that the logo navigates to when selected.\r\n    }\r\n  }\r\n\r\n  // Add image property to the entity and then add it to the card layout.\r\n  if (movie.posterUrl !== \"\") {\r\n    entity.properties[\"Image\"] = {\r\n      type: \"WebImage\",\r\n      address: `${jw_img_url}${movie.posterUrl}` || \"\"\r\n    };\r\n    entity.layouts.card.mainImage = { property: \"Image\" };\r\n  }\r\n\r\n  return entity;\r\n}\r\n\r\nlet _GRAPHQL_API_URL = \"https://apis.justwatch.com/graphql\"\r\n\r\nlet _GRAPHQL_SEARCH_URL_QUERY = `\r\n  fragment Movie on MovieOrShow {\r\n    content(country: $country, language: $language) {\r\n      title\r\n      fullPath\r\n      originalReleaseYear\r\n      originalReleaseDate\r\n      runtime\r\n      shortDescription\r\n      posterUrl(profile: $profile, format: $formatPoster)\r\n    }\r\n    offers(country: $country, platform: WEB) {\r\n      monetizationType\r\n      presentationType\r\n      retailPriceValue\r\n      currency\r\n      lastChangeRetailPriceValue\r\n      package {\r\n        clearName\r\n        technicalName\r\n      }\r\n    }\r\n  }\r\n\r\n  fragment Node on Node {\r\n      __typename\r\n      ...Movie\r\n  }\r\n\r\n  query GetNodeByUrlPath($urlPath: String!, $country: Country!, $language: Language!, $formatPoster: ImageFormat, $profile: PosterProfile) {\r\n    urlV2(fullPath: $urlPath) {\r\n        node {\r\n            ...Node\r\n        }\r\n    }\r\n  }\r\n`\r\n\r\nfunction prepare_search_url_request(urlPath, language) {\r\n  let temp = urlPath.replace(\"https://www.justwatch.com\",\"\")\r\n  let country = temp.split(\"/\")[1].toUpperCase()\r\n  return {\"operationName\": \"GetNodeByUrlPath\",\r\n    \"variables\": {\r\n        \"country\": country,\r\n        \"language\": language,\r\n        \"urlPath\": urlPath,\r\n        \"formatPoster\": \"JPG\",\r\n        \"profile\": \"S718\",\r\n    },\r\n    \"query\": _GRAPHQL_SEARCH_URL_QUERY\r\n  }\r\n}\r\n\r\nfunction get_content_data(jso) {\r\n    return {\r\n      title: jso[\"title\"],\r\n      fullPath:jso[\"fullPath\"],\r\n      originalReleaseYear:jso[\"originalReleaseYear\"],\r\n      originalReleaseDate:jso[\"originalReleaseDate\"],\r\n      runtime:jso[\"runtime\"],\r\n      shortDescription:jso[\"shortDescription\"],\r\n      posterUrl:jso[\"posterUrl\"]     \r\n    }\r\n}\r\n\r\nfunction get_offer_data(jso){\r\n  let jso2 = jso.filter(o=>{\r\n    return o.monetizationType === \"BUY\" && o.retailPrice !== null  && o.currency === \"USD\" && o.presentationType === \"HD\" || o.presentationType === \"_4k\"\r\n  })\r\n\r\n  let temp = {}\r\n\r\n  let jso3 = jso2.map(o=>{\r\n    let techName = o.package.technicalName\r\n    temp[`${techName}_monetizationType`] = o.monetizationType\r\n    temp[`${techName}_retailPrice`] = o.retailPrice\r\n    temp[`${techName}_currency`] = o.currency\r\n    temp[`${techName}_presentationType`] = o.presentationType\r\n    temp[`${techName}_retailPriceValue`] = o.retailPriceValue\r\n    temp[`${techName}_package`] = {clearName: o.package.techName}\r\n    return temp\r\n  })\r\n\r\n  return temp\r\n}\r\n\r\nasync function getDataFromUrl(url:string){\r\n  let json = JSON.stringify(prepare_search_url_request(url,\"en\"))\r\n  let response = await fetch(_GRAPHQL_API_URL, {\r\n    method: \"POST\",\r\n    headers: {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin':'*',\r\n    'Access-Control-Allow-Methods':'POST,PATCH,OPTIONS'\r\n    },\r\n    body: json,\r\n  })\r\n\r\n  if (response.status === 200) {\r\n    let jso = await response.json()\r\n    let content = get_content_data(jso[\"data\"][\"urlV2\"][\"node\"][\"content\"])\r\n    let offers = get_offer_data(jso[\"data\"][\"urlV2\"][\"node\"][\"offers\"])\r\n    let jso2 = {...content, ...offers}\r\n\r\n    return [jso2]\r\n  } else console.log(response.status)\r\n}\nCustomFunctions.associate(\"MOVIESEARCH\", movieSearch);\nCustomFunctions.associate(\"MOVIESEARCH2\", movieSearch2);","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["__webpack_require__","makeMovieEntity","movie","entity","type","text","title","properties","basicValue","originalReleaseYear","originalReleaseDate","runtime","shortDescription","itunes_currency","itunes_monetizationType","itunes_presentationType","itunes_retailPrice","itunes_retailPriceValue","amazon_currency","amazon_monetizationType","amazon_presentationType","amazon_retailPrice","amazon_retailPriceValue","vudu_currency","vudu_monetizationType","vudu_presentationType","vudu_retailPrice","vudu_retailPriceValue","amctheatresondemand_currency","amctheatresondemand_monetizationType","amctheatresondemand_presentationType","amctheatresondemand_retailPrice","amctheatresondemand_retailPriceValue","microsoft_currency","microsoft_monetizationType","microsoft_presentationType","microsoft_retailPrice","microsoft_retailPriceValue","layouts","compact","icon","Excel","EntityCompactLayoutIcons","moviesAndTv","card","property","sections","layout","collapsed","provider","description","logoSourceAddress","logoTargetAddress","fullPath","posterUrl","address","mainImage","makeMovieEntity2","d","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","async","getDataFromUrl","url","json","JSON","stringify","urlPath","replace","split","toUpperCase","response","fetch","method","headers","body","status","jso","content","get_content_data","offers","jso2","filter","monetizationType","retailPrice","currency","presentationType","temp","map","techName","package","technicalName","retailPriceValue","clearName","get_offer_data","console","log","CustomFunctions","associate","query","completeMatch","notAvailableError","errorType","searchResult","length","error"],"sourceRoot":""}