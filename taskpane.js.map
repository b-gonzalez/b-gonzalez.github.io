{"version":3,"file":"taskpane.js","mappings":"k/CAOA,aAUA,SAAsBA,I,uGAElB,O,sBAAA,GAAMC,MAAMD,KAAI,SAAOE,GAAO,qC,wDAa5B,OATMC,EAAQD,EAAQE,SAASC,oBAGzBC,KAAK,WAIXH,EAAMI,OAAOC,KAAKC,MAAQ,EAAAC,IAAA,MAE1B,GAAMR,EAAQS,Q,cAAd,SACAC,QAAQC,IAAI,yBAAyBV,EAAMW,QAAO,K,6BAdpD,S,+BAiBAF,QAAQG,MAAM,G,8BA3BlBC,OAAOC,SAAQ,SAACC,GACVA,EAAKC,OAASH,OAAOI,SAASnB,QAChCoB,SAASC,eAAe,gBAAgBC,MAAMC,QAAU,OACxDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,OACpDH,SAASC,eAAe,OAAOG,QAAUzB,MAI7C,S,gFCfS,EAAAU,IAFC,CAAC,MAAS,UCChBgB,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,QClBWJ,CAAoB,M","sources":["webpack:///./src/taskpane/taskpane.ts?","webpack:///./src/taskpane/test.ts?","webpack:///webpack/bootstrap?","webpack:///webpack/startup?"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global console, document, Excel, Office */\r\n\r\nimport { foo } from './test';\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Excel) {\r\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\r\n    document.getElementById(\"app-body\").style.display = \"flex\";\r\n    document.getElementById(\"run\").onclick = run;\r\n  }\r\n});\r\n\r\nexport async function run() {\r\n  try {\r\n    await Excel.run(async (context) => {\r\n      /**\r\n       * Insert your Excel code here\r\n       */\r\n      const range = context.workbook.getSelectedRange();\r\n\r\n      // Read the range address\r\n      range.load(\"address\");\r\n\r\n      // Update the fill color\r\n      //range.format.fill.color = \"orange\";\r\n      range.format.fill.color = foo[\"Color\"];\r\n\r\n      await context.sync();\r\n      console.log(`The range address was ${range.address}.`);\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","let foo = {\"Color\": \"Blue\" };\r\n\r\nexport { foo };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4183);\n"],"names":["run","Excel","context","range","workbook","getSelectedRange","load","format","fill","color","foo","sync","console","log","address","error","Office","onReady","info","host","HostType","document","getElementById","style","display","onclick","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}